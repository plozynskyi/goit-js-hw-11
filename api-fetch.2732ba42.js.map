{"mappings":"oZAAA,MAAMA,EAAU,qCAQD,MAAMC,EAMnBC,gBACE,MAAMC,EAAM,gCAAoBH,OAAaI,KAAKC,4EAA4ED,KAAKE,mBAEnI,OAAOC,MAAMJ,GACVK,MAAKC,GAAYA,EAASC,SAC1BF,MAAK,EAACG,KAAEA,MACPP,KAAKQ,gBACDD,IAAS,GACJE,OAAOC,QACZ,4EAGGH,I,CAIbC,gBACER,KAAKE,MAAQ,C,CAGfS,YACEX,KAAKE,KAAO,C,CAGVU,YACF,OAAOZ,KAAKC,W,CAGVW,UAAMC,GACRb,KAAKC,YAAcY,C,CAlCrBC,cACEd,KAAKC,YAAc,GACnBD,KAAKE,KAAO,C","sources":["src/js/api-fetch.js"],"sourcesContent":["const API_KEY = '31765853-e30cfb70381adc432e0775e7f';\nconst BASE_URL = 'https://pixabay.com/api';\nconst options = {\n  headers: {\n    Authorization: API_KEY,\n  },\n};\n\nexport default class NewsApiService {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  fetchArticles() {\n    const url = `${BASE_URL}/?key=${API_KEY}&q=${this.searchQuery}&image_type=photo&orientation=horizontal&safesearch=true&page=${this.page}&per_page=40`;\n\n    return fetch(url)\n      .then(response => response.json())\n      .then(({ hits }) => {\n        this.incrementPage();\n        if (hits === []) {\n          return Notify.failure(\n            'Sorry, there are no images matching your search query. Please try again.'\n          );\n        }\n        return hits;\n      });\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n"],"names":["$cbf3b8a99747ad9c$var$API_KEY","$cbf3b8a99747ad9c$export$2e2bcd8739ae039","fetchArticles","url","this","searchQuery","page","fetch","then","response","json","hits","incrementPage","Notify","failure","resetPage","query","newQuery","constructor"],"version":3,"file":"api-fetch.2732ba42.js.map"}